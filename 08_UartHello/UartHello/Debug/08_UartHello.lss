
08_UartHello.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  0000031c  00000390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000031c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a0f  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000088f  00000000  00000000  00000e77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d3  00000000  00000000  00001706  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001adc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000438  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ad  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00002015  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 33       	cpi	r26, 0x36	; 54
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0c d0       	rcall	.+24     	; 0xcc <main>
  b4:	31 c1       	rjmp	.+610    	; 0x318 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch>:
#include <util/delay.h>

unsigned int DoReMi[8] = {523, 587, 659, 698, 783, 880, 987, 1046};

void putch(unsigned char data){
	while((UCSR0A & 0x20) == 0);
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch>
	UDR0 = data;
  bc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  be:	5d 9a       	sbi	0x0b, 5	; 11
  c0:	08 95       	ret

000000c2 <getch>:
}

unsigned char getch(){
	unsigned char data;
	while((UCSR0A & 0x80) == 0);
  c2:	5f 9b       	sbis	0x0b, 7	; 11
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <getch>
	data = UDR0;
  c6:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  c8:	5f 9a       	sbi	0x0b, 7	; 11
	return data;
}
  ca:	08 95       	ret

000000cc <main>:


int main(void)
{
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
  d4:	a5 97       	sbiw	r28, 0x25	; 37
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	f8 94       	cli
  da:	de bf       	out	0x3e, r29	; 62
  dc:	0f be       	out	0x3f, r0	; 63
  de:	cd bf       	out	0x3d, r28	; 61
	unsigned char piano = 0;
	unsigned char text[] = "\r\nPlease Play Piano.(1~8)\r\n";
  e0:	8c e1       	ldi	r24, 0x1C	; 28
  e2:	e0 e1       	ldi	r30, 0x10	; 16
  e4:	f1 e0       	ldi	r31, 0x01	; 1
  e6:	de 01       	movw	r26, r28
  e8:	11 96       	adiw	r26, 0x01	; 1
  ea:	01 90       	ld	r0, Z+
  ec:	0d 92       	st	X+, r0
  ee:	8a 95       	dec	r24
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x1e>

	unsigned char echo[] = "ECHO >> ";
  f2:	89 e0       	ldi	r24, 0x09	; 9
  f4:	ec e2       	ldi	r30, 0x2C	; 44
  f6:	f1 e0       	ldi	r31, 0x01	; 1
  f8:	de 01       	movw	r26, r28
  fa:	5d 96       	adiw	r26, 0x1d	; 29
  fc:	01 90       	ld	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	8a 95       	dec	r24
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x30>
	unsigned char i = 0;

	DDRE = 0xfe;
 104:	8e ef       	ldi	r24, 0xFE	; 254
 106:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x80;
 108:	80 e8       	ldi	r24, 0x80	; 128
 10a:	87 bb       	out	0x17, r24	; 23

	UCSR0A = 0x00;
 10c:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
 10e:	88 e1       	ldi	r24, 0x18	; 24
 110:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
 112:	86 e0       	ldi	r24, 0x06	; 6
 114:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>

	UBRR0H = 0x00;
 118:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03;
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	89 b9       	out	0x09, r24	; 9
	
	TCCR1A |= 0x00;
 120:	8f b5       	in	r24, 0x2f	; 47
 122:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 0x19;
 124:	8e b5       	in	r24, 0x2e	; 46
 126:	89 61       	ori	r24, 0x19	; 25
 128:	8e bd       	out	0x2e, r24	; 46
	TCCR1C = 0x00;
 12a:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	TCNT1 = 0x0000;
 12e:	1d bc       	out	0x2d, r1	; 45
 130:	1c bc       	out	0x2c, r1	; 44
{
	unsigned char piano = 0;
	unsigned char text[] = "\r\nPlease Play Piano.(1~8)\r\n";

	unsigned char echo[] = "ECHO >> ";
	unsigned char i = 0;
 132:	10 e0       	ldi	r17, 0x00	; 0
	TCCR1A |= 0x00;
	TCCR1B |= 0x19;
	TCCR1C = 0x00;
	TCNT1 = 0x0000;

	while(text[i]!='\0'){
 134:	e1 e0       	ldi	r30, 0x01	; 1
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ec 0f       	add	r30, r28
 13a:	fd 1f       	adc	r31, r29
 13c:	e1 0f       	add	r30, r17
 13e:	f1 1d       	adc	r31, r1
 140:	80 81       	ld	r24, Z
 142:	88 23       	and	r24, r24
 144:	19 f0       	breq	.+6      	; 0x14c <main+0x80>
		putch(text[i++]);
 146:	1f 5f       	subi	r17, 0xFF	; 255
 148:	b7 df       	rcall	.-146    	; 0xb8 <putch>
 14a:	f4 cf       	rjmp	.-24     	; 0x134 <main+0x68>
 14c:	10 e0       	ldi	r17, 0x00	; 0
	}

	i = 0;

	while(echo[i]!='\0'){
 14e:	ed e1       	ldi	r30, 0x1D	; 29
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	ec 0f       	add	r30, r28
 154:	fd 1f       	adc	r31, r29
 156:	e1 0f       	add	r30, r17
 158:	f1 1d       	adc	r31, r1
 15a:	80 81       	ld	r24, Z
 15c:	88 23       	and	r24, r24
 15e:	19 f0       	breq	.+6      	; 0x166 <main+0x9a>
		putch(echo[i++]);
 160:	1f 5f       	subi	r17, 0xFF	; 255
 162:	aa df       	rcall	.-172    	; 0xb8 <putch>
 164:	f4 cf       	rjmp	.-24     	; 0x14e <main+0x82>
			OCR1C = ICR1/10;
		}

		else if(getch()=='8'){
			TCCR1A |= 0x0A;
			ICR1 = 7372800/DoReMi[7];
 166:	c1 2c       	mov	r12, r1
 168:	80 e8       	ldi	r24, 0x80	; 128
 16a:	d8 2e       	mov	r13, r24
 16c:	80 e7       	ldi	r24, 0x70	; 112
 16e:	e8 2e       	mov	r14, r24
 170:	f1 2c       	mov	r15, r1
			OCR1C = ICR1/10;
 172:	0a e0       	ldi	r16, 0x0A	; 10
		putch(echo[i++]);
	}

	while (1)
	{
		putch(getch());
 174:	10 e0       	ldi	r17, 0x00	; 0
 176:	a5 df       	rcall	.-182    	; 0xc2 <getch>
 178:	9f df       	rcall	.-194    	; 0xb8 <putch>

		if(getch()=='1'){
 17a:	a3 df       	rcall	.-186    	; 0xc2 <getch>
 17c:	81 33       	cpi	r24, 0x31	; 49
 17e:	41 f4       	brne	.+16     	; 0x190 <main+0xc4>
 180:	8f b5       	in	r24, 0x2f	; 47
			
			TCCR1A |= 0x0A;
 182:	8a 60       	ori	r24, 0x0A	; 10
 184:	8f bd       	out	0x2f, r24	; 47
 186:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
			ICR1 = 7372800/DoReMi[0];
 18a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 18e:	4d c0       	rjmp	.+154    	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='2'){
 190:	98 df       	rcall	.-208    	; 0xc2 <getch>
 192:	82 33       	cpi	r24, 0x32	; 50
 194:	41 f4       	brne	.+16     	; 0x1a6 <main+0xda>
 196:	8f b5       	in	r24, 0x2f	; 47
			TCCR1A |= 0x0A;
 198:	8a 60       	ori	r24, 0x0A	; 10
 19a:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[1];
 19c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1a0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1a4:	42 c0       	rjmp	.+132    	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='3'){
 1a6:	8d df       	rcall	.-230    	; 0xc2 <getch>
 1a8:	83 33       	cpi	r24, 0x33	; 51
 1aa:	41 f4       	brne	.+16     	; 0x1bc <main+0xf0>
 1ac:	8f b5       	in	r24, 0x2f	; 47
			TCCR1A |= 0x0A;
 1ae:	8a 60       	ori	r24, 0x0A	; 10
 1b0:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[2];
 1b2:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 1b6:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
 1ba:	37 c0       	rjmp	.+110    	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='4'){
 1bc:	82 df       	rcall	.-252    	; 0xc2 <getch>
 1be:	84 33       	cpi	r24, 0x34	; 52
 1c0:	41 f4       	brne	.+16     	; 0x1d2 <main+0x106>
 1c2:	8f b5       	in	r24, 0x2f	; 47
			TCCR1A |= 0x0A;
 1c4:	8a 60       	ori	r24, 0x0A	; 10
 1c6:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[3];
 1c8:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 1cc:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 1d0:	2c c0       	rjmp	.+88     	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='5'){
 1d2:	77 df       	rcall	.-274    	; 0xc2 <getch>
 1d4:	85 33       	cpi	r24, 0x35	; 53
 1d6:	41 f4       	brne	.+16     	; 0x1e8 <main+0x11c>
			TCCR1A |= 0x0A;
 1d8:	8f b5       	in	r24, 0x2f	; 47
 1da:	8a 60       	ori	r24, 0x0A	; 10
 1dc:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[4];
 1de:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
 1e2:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
 1e6:	21 c0       	rjmp	.+66     	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='6'){
 1e8:	6c df       	rcall	.-296    	; 0xc2 <getch>
 1ea:	86 33       	cpi	r24, 0x36	; 54
 1ec:	41 f4       	brne	.+16     	; 0x1fe <main+0x132>
			TCCR1A |= 0x0A;
 1ee:	8f b5       	in	r24, 0x2f	; 47
 1f0:	8a 60       	ori	r24, 0x0A	; 10
 1f2:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[5];
 1f4:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
 1f8:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
 1fc:	16 c0       	rjmp	.+44     	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='7'){
 1fe:	61 df       	rcall	.-318    	; 0xc2 <getch>
 200:	87 33       	cpi	r24, 0x37	; 55
 202:	41 f4       	brne	.+16     	; 0x214 <main+0x148>
			TCCR1A |= 0x0A;
 204:	8f b5       	in	r24, 0x2f	; 47
 206:	8a 60       	ori	r24, 0x0A	; 10
 208:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[6];
 20a:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
 20e:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__DATA_REGION_ORIGIN__+0xd>
 212:	0b c0       	rjmp	.+22     	; 0x22a <main+0x15e>
			TCCR1A |= 0x00;
			ICR1 = 10;
			OCR1C = ICR1/10;
		}

		else if(getch()=='8'){
 214:	56 df       	rcall	.-340    	; 0xc2 <getch>
 216:	88 33       	cpi	r24, 0x38	; 56
 218:	09 f0       	breq	.+2      	; 0x21c <main+0x150>
 21a:	ad cf       	rjmp	.-166    	; 0x176 <main+0xaa>
			TCCR1A |= 0x0A;
 21c:	8f b5       	in	r24, 0x2f	; 47
 21e:	8a 60       	ori	r24, 0x0A	; 10
 220:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 7372800/DoReMi[7];
 222:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
 226:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__DATA_REGION_ORIGIN__+0xf>
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	c7 01       	movw	r24, r14
 230:	b6 01       	movw	r22, r12
 232:	34 d0       	rcall	.+104    	; 0x29c <__divmodsi4>
 234:	37 bd       	out	0x27, r19	; 39
 236:	26 bd       	out	0x26, r18	; 38
			OCR1C = ICR1/10;
 238:	86 b5       	in	r24, 0x26	; 38
 23a:	97 b5       	in	r25, 0x27	; 39
 23c:	b8 01       	movw	r22, r16
 23e:	1a d0       	rcall	.+52     	; 0x274 <__udivmodhi4>
 240:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 244:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 248:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	8f e3       	ldi	r24, 0x3F	; 63
 24c:	9b e0       	ldi	r25, 0x0B	; 11
 24e:	21 50       	subi	r18, 0x01	; 1
 250:	80 40       	sbci	r24, 0x00	; 0
 252:	90 40       	sbci	r25, 0x00	; 0
 254:	e1 f7       	brne	.-8      	; 0x24e <main+0x182>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0x18c>
 258:	00 00       	nop
			_delay_ms(500);
			TCCR1A |= 0x00;
 25a:	8f b5       	in	r24, 0x2f	; 47
 25c:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 10;
 25e:	17 bd       	out	0x27, r17	; 39
 260:	06 bd       	out	0x26, r16	; 38
			OCR1C = ICR1/10;
 262:	86 b5       	in	r24, 0x26	; 38
 264:	97 b5       	in	r25, 0x27	; 39
 266:	b8 01       	movw	r22, r16
 268:	05 d0       	rcall	.+10     	; 0x274 <__udivmodhi4>
 26a:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 26e:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 272:	81 cf       	rjmp	.-254    	; 0x176 <main+0xaa>

00000274 <__udivmodhi4>:
 274:	aa 1b       	sub	r26, r26
 276:	bb 1b       	sub	r27, r27
 278:	51 e1       	ldi	r21, 0x11	; 17
 27a:	07 c0       	rjmp	.+14     	; 0x28a <__udivmodhi4_ep>

0000027c <__udivmodhi4_loop>:
 27c:	aa 1f       	adc	r26, r26
 27e:	bb 1f       	adc	r27, r27
 280:	a6 17       	cp	r26, r22
 282:	b7 07       	cpc	r27, r23
 284:	10 f0       	brcs	.+4      	; 0x28a <__udivmodhi4_ep>
 286:	a6 1b       	sub	r26, r22
 288:	b7 0b       	sbc	r27, r23

0000028a <__udivmodhi4_ep>:
 28a:	88 1f       	adc	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	5a 95       	dec	r21
 290:	a9 f7       	brne	.-22     	; 0x27c <__udivmodhi4_loop>
 292:	80 95       	com	r24
 294:	90 95       	com	r25
 296:	bc 01       	movw	r22, r24
 298:	cd 01       	movw	r24, r26
 29a:	08 95       	ret

0000029c <__divmodsi4>:
 29c:	05 2e       	mov	r0, r21
 29e:	97 fb       	bst	r25, 7
 2a0:	16 f4       	brtc	.+4      	; 0x2a6 <__divmodsi4+0xa>
 2a2:	00 94       	com	r0
 2a4:	0f d0       	rcall	.+30     	; 0x2c4 <__negsi2>
 2a6:	57 fd       	sbrc	r21, 7
 2a8:	05 d0       	rcall	.+10     	; 0x2b4 <__divmodsi4_neg2>
 2aa:	14 d0       	rcall	.+40     	; 0x2d4 <__udivmodsi4>
 2ac:	07 fc       	sbrc	r0, 7
 2ae:	02 d0       	rcall	.+4      	; 0x2b4 <__divmodsi4_neg2>
 2b0:	46 f4       	brtc	.+16     	; 0x2c2 <__divmodsi4_exit>
 2b2:	08 c0       	rjmp	.+16     	; 0x2c4 <__negsi2>

000002b4 <__divmodsi4_neg2>:
 2b4:	50 95       	com	r21
 2b6:	40 95       	com	r20
 2b8:	30 95       	com	r19
 2ba:	21 95       	neg	r18
 2bc:	3f 4f       	sbci	r19, 0xFF	; 255
 2be:	4f 4f       	sbci	r20, 0xFF	; 255
 2c0:	5f 4f       	sbci	r21, 0xFF	; 255

000002c2 <__divmodsi4_exit>:
 2c2:	08 95       	ret

000002c4 <__negsi2>:
 2c4:	90 95       	com	r25
 2c6:	80 95       	com	r24
 2c8:	70 95       	com	r23
 2ca:	61 95       	neg	r22
 2cc:	7f 4f       	sbci	r23, 0xFF	; 255
 2ce:	8f 4f       	sbci	r24, 0xFF	; 255
 2d0:	9f 4f       	sbci	r25, 0xFF	; 255
 2d2:	08 95       	ret

000002d4 <__udivmodsi4>:
 2d4:	a1 e2       	ldi	r26, 0x21	; 33
 2d6:	1a 2e       	mov	r1, r26
 2d8:	aa 1b       	sub	r26, r26
 2da:	bb 1b       	sub	r27, r27
 2dc:	fd 01       	movw	r30, r26
 2de:	0d c0       	rjmp	.+26     	; 0x2fa <__udivmodsi4_ep>

000002e0 <__udivmodsi4_loop>:
 2e0:	aa 1f       	adc	r26, r26
 2e2:	bb 1f       	adc	r27, r27
 2e4:	ee 1f       	adc	r30, r30
 2e6:	ff 1f       	adc	r31, r31
 2e8:	a2 17       	cp	r26, r18
 2ea:	b3 07       	cpc	r27, r19
 2ec:	e4 07       	cpc	r30, r20
 2ee:	f5 07       	cpc	r31, r21
 2f0:	20 f0       	brcs	.+8      	; 0x2fa <__udivmodsi4_ep>
 2f2:	a2 1b       	sub	r26, r18
 2f4:	b3 0b       	sbc	r27, r19
 2f6:	e4 0b       	sbc	r30, r20
 2f8:	f5 0b       	sbc	r31, r21

000002fa <__udivmodsi4_ep>:
 2fa:	66 1f       	adc	r22, r22
 2fc:	77 1f       	adc	r23, r23
 2fe:	88 1f       	adc	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	1a 94       	dec	r1
 304:	69 f7       	brne	.-38     	; 0x2e0 <__udivmodsi4_loop>
 306:	60 95       	com	r22
 308:	70 95       	com	r23
 30a:	80 95       	com	r24
 30c:	90 95       	com	r25
 30e:	9b 01       	movw	r18, r22
 310:	ac 01       	movw	r20, r24
 312:	bd 01       	movw	r22, r26
 314:	cf 01       	movw	r24, r30
 316:	08 95       	ret

00000318 <_exit>:
 318:	f8 94       	cli

0000031a <__stop_program>:
 31a:	ff cf       	rjmp	.-2      	; 0x31a <__stop_program>


LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000834  000008a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000834  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000924  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f15  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096a  00000000  00000000  000018d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004fe  00000000  00000000  00002243  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00002744  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00002804  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005ae  00000000  00000000  00002c7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00003229  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e3       	ldi	r30, 0x34	; 52
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 32       	cpi	r26, 0x20	; 32
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	5e d0       	rcall	.+188    	; 0x170 <main>
  b4:	bd c3       	rjmp	.+1914   	; 0x830 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <LcdCmd_4bit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	d8 98       	cbi	0x1b, 0	; 27
  ba:	d9 98       	cbi	0x1b, 1	; 27
  bc:	98 2f       	mov	r25, r24
  be:	90 7f       	andi	r25, 0xF0	; 240
  c0:	94 60       	ori	r25, 0x04	; 4
  c2:	9b bb       	out	0x1b, r25	; 27
  c4:	2b e7       	ldi	r18, 0x7B	; 123
  c6:	2a 95       	dec	r18
  c8:	f1 f7       	brne	.-4      	; 0xc6 <LcdCmd_4bit+0xe>
  ca:	da 98       	cbi	0x1b, 2	; 27
  cc:	d8 98       	cbi	0x1b, 0	; 27
  ce:	d9 98       	cbi	0x1b, 1	; 27
  d0:	20 e1       	ldi	r18, 0x10	; 16
  d2:	82 9f       	mul	r24, r18
  d4:	c0 01       	movw	r24, r0
  d6:	11 24       	eor	r1, r1
  d8:	84 60       	ori	r24, 0x04	; 4
  da:	8b bb       	out	0x1b, r24	; 27
  dc:	8b e7       	ldi	r24, 0x7B	; 123
  de:	8a 95       	dec	r24
  e0:	f1 f7       	brne	.-4      	; 0xde <LcdCmd_4bit+0x26>
  e2:	da 98       	cbi	0x1b, 2	; 27
  e4:	08 95       	ret

000000e6 <LcdData_4bit>:
  e6:	d9 98       	cbi	0x1b, 1	; 27
  e8:	98 2f       	mov	r25, r24
  ea:	90 7f       	andi	r25, 0xF0	; 240
  ec:	95 60       	ori	r25, 0x05	; 5
  ee:	9b bb       	out	0x1b, r25	; 27
  f0:	2b e7       	ldi	r18, 0x7B	; 123
  f2:	2a 95       	dec	r18
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LcdData_4bit+0xc>
  f6:	da 98       	cbi	0x1b, 2	; 27
  f8:	d9 98       	cbi	0x1b, 1	; 27
  fa:	20 e1       	ldi	r18, 0x10	; 16
  fc:	82 9f       	mul	r24, r18
  fe:	c0 01       	movw	r24, r0
 100:	11 24       	eor	r1, r1
 102:	85 60       	ori	r24, 0x05	; 5
 104:	8b bb       	out	0x1b, r24	; 27
 106:	8b e7       	ldi	r24, 0x7B	; 123
 108:	8a 95       	dec	r24
 10a:	f1 f7       	brne	.-4      	; 0x108 <LcdData_4bit+0x22>
 10c:	da 98       	cbi	0x1b, 2	; 27
 10e:	08 95       	ret

00000110 <Lcd_CHAR>:
 110:	ea df       	rcall	.-44     	; 0xe6 <LcdData_4bit>
 112:	83 e3       	ldi	r24, 0x33	; 51
 114:	97 e0       	ldi	r25, 0x07	; 7
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <Lcd_CHAR+0x6>
 11a:	08 95       	ret

0000011c <Lcd_STR>:
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	ec 01       	movw	r28, r24
 122:	89 91       	ld	r24, Y+
 124:	88 23       	and	r24, r24
 126:	11 f0       	breq	.+4      	; 0x12c <Lcd_STR+0x10>
 128:	f3 df       	rcall	.-26     	; 0x110 <Lcd_CHAR>
 12a:	fb cf       	rjmp	.-10     	; 0x122 <Lcd_STR+0x6>
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <Lcd_Clear>:
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	c1 df       	rcall	.-126    	; 0xb8 <LcdCmd_4bit>
 136:	86 e6       	ldi	r24, 0x66	; 102
 138:	9e e0       	ldi	r25, 0x0E	; 14
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <Lcd_Clear+0x8>
 13e:	00 00       	nop
 140:	08 95       	ret

00000142 <LcdInit_4bit>:
	}
}

void LcdInit_4bit(void)
{
	LcdCmd_4bit(0x02);	//cursor Home
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	b9 df       	rcall	.-142    	; 0xb8 <LcdCmd_4bit>
 146:	86 e6       	ldi	r24, 0x66	; 102
 148:	9e e0       	ldi	r25, 0x0E	; 14
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <LcdInit_4bit+0x8>
 14e:	00 00       	nop
	_delay_ms(2);		//명령어를 IR에 쓰고나면 37us 또는 1.52ms을 기다림.
	LcdCmd_4bit(0x28);	//기능 재설정
 150:	88 e2       	ldi	r24, 0x28	; 40
 152:	b2 df       	rcall	.-156    	; 0xb8 <LcdCmd_4bit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 154:	9b e5       	ldi	r25, 0x5B	; 91
 156:	9a 95       	dec	r25
	_delay_us(37);
	LcdCmd_4bit(0x0c);	//LCD ON, 커서 깜박임 없음
 158:	f1 f7       	brne	.-4      	; 0x156 <LcdInit_4bit+0x14>
 15a:	8c e0       	ldi	r24, 0x0C	; 12
 15c:	ad df       	rcall	.-166    	; 0xb8 <LcdCmd_4bit>
 15e:	8b e5       	ldi	r24, 0x5B	; 91
 160:	8a 95       	dec	r24
	_delay_us(37);
	LcdCmd_4bit(0x06);	//엔트리:우로 이동
 162:	f1 f7       	brne	.-4      	; 0x160 <LcdInit_4bit+0x1e>
 164:	86 e0       	ldi	r24, 0x06	; 6
 166:	a8 df       	rcall	.-176    	; 0xb8 <LcdCmd_4bit>
 168:	9b e5       	ldi	r25, 0x5B	; 91
 16a:	9a 95       	dec	r25
	_delay_us(37);
	Lcd_Clear();
 16c:	f1 f7       	brne	.-4      	; 0x16a <LcdInit_4bit+0x28>
 16e:	e1 cf       	rjmp	.-62     	; 0x132 <Lcd_Clear>

00000170 <main>:
	}
}
*/

int main(void)
{
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	6e 97       	sbiw	r28, 0x1e	; 30
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	de bf       	out	0x3e, r29	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	cd bf       	out	0x3d, r28	; 61
	unsigned char Switch_flag = 0;
	
	int i = 0, j;
	char s[20];
	DDRA = 0xFF; // LCD
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0x00; // 버튼
 188:	11 ba       	out	0x11, r1	; 17
	
	LcdInit_4bit();
 18a:	db df       	rcall	.-74     	; 0x142 <LcdInit_4bit>
				Byte str[] = " GUGUDAN "; // lcd 첫번째줄 출력
				Lcd_Pos(0,0);
				Lcd_STR(str);
				
				Lcd_Pos(1,0); // lcd 두번째 줄 출력
				sprintf(s, "%d * %d = %d", i, j, i*j);
 18c:	e0 e0       	ldi	r30, 0x00	; 0
 18e:	ae 2e       	mov	r10, r30
 190:	e1 e0       	ldi	r30, 0x01	; 1
 192:	be 2e       	mov	r11, r30
 194:	ce 01       	movw	r24, r28
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	4c 01       	movw	r8, r24
	
	LcdInit_4bit();
	
	while(1)
	{
		Switch_flag = PIND;
 19a:	80 b3       	in	r24, 0x10	; 16
		
		if (Switch_flag == 0x01) // 3
 19c:	81 30       	cpi	r24, 0x01	; 1
 19e:	e9 f0       	breq	.+58     	; 0x1da <main+0x6a>
			i = 8;
		else if (Switch_flag == 0x02) // 3
 1a0:	82 30       	cpi	r24, 0x02	; 2
 1a2:	f1 f0       	breq	.+60     	; 0x1e0 <main+0x70>
			i = 9;
		else if(Switch_flag == 0x04) // 4
 1a4:	84 30       	cpi	r24, 0x04	; 4
 1a6:	f9 f0       	breq	.+62     	; 0x1e6 <main+0x76>
			i = 2;
		else if(Switch_flag == 0x08) // 5
 1a8:	88 30       	cpi	r24, 0x08	; 8
 1aa:	01 f1       	breq	.+64     	; 0x1ec <main+0x7c>
			i = 3;
		else if(Switch_flag == 0x10) // 6
 1ac:	80 31       	cpi	r24, 0x10	; 16
 1ae:	09 f1       	breq	.+66     	; 0x1f2 <main+0x82>
			i = 4;
		else if(Switch_flag == 0x20) // 7
 1b0:	80 32       	cpi	r24, 0x20	; 32
 1b2:	11 f1       	breq	.+68     	; 0x1f8 <main+0x88>
			i = 5;
		else if(Switch_flag == 0x40) // 8
 1b4:	80 34       	cpi	r24, 0x40	; 64
 1b6:	19 f1       	breq	.+70     	; 0x1fe <main+0x8e>
			i = 6;
		else if(Switch_flag == 0x80) // 9
 1b8:	80 38       	cpi	r24, 0x80	; 128
 1ba:	21 f1       	breq	.+72     	; 0x204 <main+0x94>
			i = 7;
		else
		{
			i = 0;
			Byte str2[] = " number "; // lcd 첫번째줄 출력
 1bc:	89 e0       	ldi	r24, 0x09	; 9
 1be:	ed e0       	ldi	r30, 0x0D	; 13
 1c0:	f1 e0       	ldi	r31, 0x01	; 1
 1c2:	de 01       	movw	r26, r28
 1c4:	55 96       	adiw	r26, 0x15	; 21
 1c6:	01 90       	ld	r0, Z+
 1c8:	0d 92       	st	X+, r0
 1ca:	8a 95       	dec	r24
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x56>
	}
}

void Lcd_Pos(Byte col, Byte row)	//위치지정 함수
{
	LcdCmd_4bit(0x80 | (row + col * 0x40));
 1ce:	80 e8       	ldi	r24, 0x80	; 128
 1d0:	73 df       	rcall	.-282    	; 0xb8 <LcdCmd_4bit>
		else
		{
			i = 0;
			Byte str2[] = " number "; // lcd 첫번째줄 출력
			Lcd_Pos(0,0);
			Lcd_STR(str2);
 1d2:	ce 01       	movw	r24, r28
 1d4:	45 96       	adiw	r24, 0x15	; 21
 1d6:	a2 df       	rcall	.-188    	; 0x11c <Lcd_STR>
 1d8:	e0 cf       	rjmp	.-64     	; 0x19a <main+0x2a>
	while(1)
	{
		Switch_flag = PIND;
		
		if (Switch_flag == 0x01) // 3
			i = 8;
 1da:	78 e0       	ldi	r23, 0x08	; 8
 1dc:	77 2e       	mov	r7, r23
 1de:	14 c0       	rjmp	.+40     	; 0x208 <main+0x98>
		else if (Switch_flag == 0x02) // 3
			i = 9;
 1e0:	69 e0       	ldi	r22, 0x09	; 9
 1e2:	76 2e       	mov	r7, r22
 1e4:	11 c0       	rjmp	.+34     	; 0x208 <main+0x98>
		else if(Switch_flag == 0x04) // 4
			i = 2;
 1e6:	52 e0       	ldi	r21, 0x02	; 2
 1e8:	75 2e       	mov	r7, r21
 1ea:	0e c0       	rjmp	.+28     	; 0x208 <main+0x98>
		else if(Switch_flag == 0x08) // 5
			i = 3;
 1ec:	43 e0       	ldi	r20, 0x03	; 3
 1ee:	74 2e       	mov	r7, r20
 1f0:	0b c0       	rjmp	.+22     	; 0x208 <main+0x98>
		else if(Switch_flag == 0x10) // 6
			i = 4;
 1f2:	34 e0       	ldi	r19, 0x04	; 4
 1f4:	73 2e       	mov	r7, r19
 1f6:	08 c0       	rjmp	.+16     	; 0x208 <main+0x98>
		else if(Switch_flag == 0x20) // 7
			i = 5;
 1f8:	25 e0       	ldi	r18, 0x05	; 5
 1fa:	72 2e       	mov	r7, r18
 1fc:	05 c0       	rjmp	.+10     	; 0x208 <main+0x98>
		else if(Switch_flag == 0x40) // 8
			i = 6;
 1fe:	96 e0       	ldi	r25, 0x06	; 6
 200:	79 2e       	mov	r7, r25
 202:	02 c0       	rjmp	.+4      	; 0x208 <main+0x98>
		else if(Switch_flag == 0x80) // 9
			i = 7;
 204:	87 e0       	ldi	r24, 0x07	; 7
 206:	78 2e       	mov	r7, r24
 208:	c7 2c       	mov	r12, r7
 20a:	d1 2c       	mov	r13, r1
	}
}
*/

int main(void)
{
 20c:	76 01       	movw	r14, r12
 20e:	01 e0       	ldi	r16, 0x01	; 1
 210:	10 e0       	ldi	r17, 0x00	; 0

		if(i > 1)
		{
			for (j=1; j<10; j++)
			{
				Byte str[] = " GUGUDAN "; // lcd 첫번째줄 출력
 212:	8a e0       	ldi	r24, 0x0A	; 10
 214:	e6 e1       	ldi	r30, 0x16	; 22
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	de 01       	movw	r26, r28
 21a:	55 96       	adiw	r26, 0x15	; 21
 21c:	01 90       	ld	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	8a 95       	dec	r24
	}
}

void Lcd_Pos(Byte col, Byte row)	//위치지정 함수
{
	LcdCmd_4bit(0x80 | (row + col * 0x40));
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0xac>
 224:	80 e8       	ldi	r24, 0x80	; 128
		{
			for (j=1; j<10; j++)
			{
				Byte str[] = " GUGUDAN "; // lcd 첫번째줄 출력
				Lcd_Pos(0,0);
				Lcd_STR(str);
 226:	48 df       	rcall	.-368    	; 0xb8 <LcdCmd_4bit>
 228:	ce 01       	movw	r24, r28
 22a:	45 96       	adiw	r24, 0x15	; 21
	}
}

void Lcd_Pos(Byte col, Byte row)	//위치지정 함수
{
	LcdCmd_4bit(0x80 | (row + col * 0x40));
 22c:	77 df       	rcall	.-274    	; 0x11c <Lcd_STR>
 22e:	80 ec       	ldi	r24, 0xC0	; 192
 230:	43 df       	rcall	.-378    	; 0xb8 <LcdCmd_4bit>
				Byte str[] = " GUGUDAN "; // lcd 첫번째줄 출력
				Lcd_Pos(0,0);
				Lcd_STR(str);
				
				Lcd_Pos(1,0); // lcd 두번째 줄 출력
				sprintf(s, "%d * %d = %d", i, j, i*j);
 232:	ff 92       	push	r15
 234:	ef 92       	push	r14
 236:	1f 93       	push	r17
 238:	0f 93       	push	r16
 23a:	1f 92       	push	r1
 23c:	7f 92       	push	r7
 23e:	bf 92       	push	r11
 240:	af 92       	push	r10
 242:	9f 92       	push	r9
 244:	8f 92       	push	r8
				Lcd_STR(s);
 246:	19 d0       	rcall	.+50     	; 0x27a <sprintf>
 248:	c4 01       	movw	r24, r8
 24a:	68 df       	rcall	.-304    	; 0x11c <Lcd_STR>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24c:	9f ef       	ldi	r25, 0xFF	; 255
 24e:	2f e7       	ldi	r18, 0x7F	; 127
 250:	86 e1       	ldi	r24, 0x16	; 22
 252:	91 50       	subi	r25, 0x01	; 1
 254:	20 40       	sbci	r18, 0x00	; 0
 256:	80 40       	sbci	r24, 0x00	; 0
 258:	e1 f7       	brne	.-8      	; 0x252 <main+0xe2>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <main+0xec>
 25c:	00 00       	nop
			Lcd_STR(str2);
		}

		if(i > 1)
		{
			for (j=1; j<10; j++)
 25e:	0f 5f       	subi	r16, 0xFF	; 255
 260:	1f 4f       	sbci	r17, 0xFF	; 255
 262:	ec 0c       	add	r14, r12
 264:	fd 1c       	adc	r15, r13
 266:	0f b6       	in	r0, 0x3f	; 63
 268:	f8 94       	cli
 26a:	de bf       	out	0x3e, r29	; 62
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	cd bf       	out	0x3d, r28	; 61
 270:	0a 30       	cpi	r16, 0x0A	; 10
 272:	11 05       	cpc	r17, r1
				Lcd_Pos(1,0); // lcd 두번째 줄 출력
				sprintf(s, "%d * %d = %d", i, j, i*j);
				Lcd_STR(s);
				_delay_ms(1000);
			}
			Lcd_Clear(); // lcd 화면 초기화
 274:	71 f6       	brne	.-100    	; 0x212 <main+0xa2>
 276:	5d df       	rcall	.-326    	; 0x132 <Lcd_Clear>
 278:	90 cf       	rjmp	.-224    	; 0x19a <main+0x2a>

0000027a <sprintf>:
 27a:	0f 93       	push	r16
 27c:	1f 93       	push	r17
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	2e 97       	sbiw	r28, 0x0e	; 14
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	0d 89       	ldd	r16, Y+21	; 0x15
 294:	1e 89       	ldd	r17, Y+22	; 0x16
 296:	86 e0       	ldi	r24, 0x06	; 6
 298:	8c 83       	std	Y+4, r24	; 0x04
 29a:	1a 83       	std	Y+2, r17	; 0x02
 29c:	09 83       	std	Y+1, r16	; 0x01
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	9f e7       	ldi	r25, 0x7F	; 127
 2a2:	9e 83       	std	Y+6, r25	; 0x06
 2a4:	8d 83       	std	Y+5, r24	; 0x05
 2a6:	ae 01       	movw	r20, r28
 2a8:	47 5e       	subi	r20, 0xE7	; 231
 2aa:	5f 4f       	sbci	r21, 0xFF	; 255
 2ac:	6f 89       	ldd	r22, Y+23	; 0x17
 2ae:	78 8d       	ldd	r23, Y+24	; 0x18
 2b0:	ce 01       	movw	r24, r28
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	10 d0       	rcall	.+32     	; 0x2d6 <vfprintf>
 2b6:	ef 81       	ldd	r30, Y+7	; 0x07
 2b8:	f8 85       	ldd	r31, Y+8	; 0x08
 2ba:	e0 0f       	add	r30, r16
 2bc:	f1 1f       	adc	r31, r17
 2be:	10 82       	st	Z, r1
 2c0:	2e 96       	adiw	r28, 0x0e	; 14
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	f8 94       	cli
 2c6:	de bf       	out	0x3e, r29	; 62
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	cd bf       	out	0x3d, r28	; 61
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	1f 91       	pop	r17
 2d2:	0f 91       	pop	r16
 2d4:	08 95       	ret

000002d6 <vfprintf>:
 2d6:	2f 92       	push	r2
 2d8:	3f 92       	push	r3
 2da:	4f 92       	push	r4
 2dc:	5f 92       	push	r5
 2de:	6f 92       	push	r6
 2e0:	7f 92       	push	r7
 2e2:	8f 92       	push	r8
 2e4:	9f 92       	push	r9
 2e6:	af 92       	push	r10
 2e8:	bf 92       	push	r11
 2ea:	cf 92       	push	r12
 2ec:	df 92       	push	r13
 2ee:	ef 92       	push	r14
 2f0:	ff 92       	push	r15
 2f2:	0f 93       	push	r16
 2f4:	1f 93       	push	r17
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	cd b7       	in	r28, 0x3d	; 61
 2fc:	de b7       	in	r29, 0x3e	; 62
 2fe:	2b 97       	sbiw	r28, 0x0b	; 11
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	f8 94       	cli
 304:	de bf       	out	0x3e, r29	; 62
 306:	0f be       	out	0x3f, r0	; 63
 308:	cd bf       	out	0x3d, r28	; 61
 30a:	6c 01       	movw	r12, r24
 30c:	7b 01       	movw	r14, r22
 30e:	8a 01       	movw	r16, r20
 310:	fc 01       	movw	r30, r24
 312:	17 82       	std	Z+7, r1	; 0x07
 314:	16 82       	std	Z+6, r1	; 0x06
 316:	83 81       	ldd	r24, Z+3	; 0x03
 318:	81 ff       	sbrs	r24, 1
 31a:	bf c1       	rjmp	.+894    	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	3c 01       	movw	r6, r24
 322:	f6 01       	movw	r30, r12
 324:	93 81       	ldd	r25, Z+3	; 0x03
 326:	f7 01       	movw	r30, r14
 328:	93 fd       	sbrc	r25, 3
 32a:	85 91       	lpm	r24, Z+
 32c:	93 ff       	sbrs	r25, 3
 32e:	81 91       	ld	r24, Z+
 330:	7f 01       	movw	r14, r30
 332:	88 23       	and	r24, r24
 334:	09 f4       	brne	.+2      	; 0x338 <vfprintf+0x62>
 336:	ad c1       	rjmp	.+858    	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 338:	85 32       	cpi	r24, 0x25	; 37
 33a:	39 f4       	brne	.+14     	; 0x34a <vfprintf+0x74>
 33c:	93 fd       	sbrc	r25, 3
 33e:	85 91       	lpm	r24, Z+
 340:	93 ff       	sbrs	r25, 3
 342:	81 91       	ld	r24, Z+
 344:	7f 01       	movw	r14, r30
 346:	85 32       	cpi	r24, 0x25	; 37
 348:	21 f4       	brne	.+8      	; 0x352 <vfprintf+0x7c>
 34a:	b6 01       	movw	r22, r12
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	d6 d1       	rcall	.+940    	; 0x6fc <fputc>
 350:	e8 cf       	rjmp	.-48     	; 0x322 <vfprintf+0x4c>
 352:	91 2c       	mov	r9, r1
 354:	21 2c       	mov	r2, r1
 356:	31 2c       	mov	r3, r1
 358:	ff e1       	ldi	r31, 0x1F	; 31
 35a:	f3 15       	cp	r31, r3
 35c:	d8 f0       	brcs	.+54     	; 0x394 <vfprintf+0xbe>
 35e:	8b 32       	cpi	r24, 0x2B	; 43
 360:	79 f0       	breq	.+30     	; 0x380 <vfprintf+0xaa>
 362:	38 f4       	brcc	.+14     	; 0x372 <vfprintf+0x9c>
 364:	80 32       	cpi	r24, 0x20	; 32
 366:	79 f0       	breq	.+30     	; 0x386 <vfprintf+0xb0>
 368:	83 32       	cpi	r24, 0x23	; 35
 36a:	a1 f4       	brne	.+40     	; 0x394 <vfprintf+0xbe>
 36c:	23 2d       	mov	r18, r3
 36e:	20 61       	ori	r18, 0x10	; 16
 370:	1d c0       	rjmp	.+58     	; 0x3ac <vfprintf+0xd6>
 372:	8d 32       	cpi	r24, 0x2D	; 45
 374:	61 f0       	breq	.+24     	; 0x38e <vfprintf+0xb8>
 376:	80 33       	cpi	r24, 0x30	; 48
 378:	69 f4       	brne	.+26     	; 0x394 <vfprintf+0xbe>
 37a:	23 2d       	mov	r18, r3
 37c:	21 60       	ori	r18, 0x01	; 1
 37e:	16 c0       	rjmp	.+44     	; 0x3ac <vfprintf+0xd6>
 380:	83 2d       	mov	r24, r3
 382:	82 60       	ori	r24, 0x02	; 2
 384:	38 2e       	mov	r3, r24
 386:	e3 2d       	mov	r30, r3
 388:	e4 60       	ori	r30, 0x04	; 4
 38a:	3e 2e       	mov	r3, r30
 38c:	2a c0       	rjmp	.+84     	; 0x3e2 <vfprintf+0x10c>
 38e:	f3 2d       	mov	r31, r3
 390:	f8 60       	ori	r31, 0x08	; 8
 392:	1d c0       	rjmp	.+58     	; 0x3ce <vfprintf+0xf8>
 394:	37 fc       	sbrc	r3, 7
 396:	2d c0       	rjmp	.+90     	; 0x3f2 <vfprintf+0x11c>
 398:	20 ed       	ldi	r18, 0xD0	; 208
 39a:	28 0f       	add	r18, r24
 39c:	2a 30       	cpi	r18, 0x0A	; 10
 39e:	40 f0       	brcs	.+16     	; 0x3b0 <vfprintf+0xda>
 3a0:	8e 32       	cpi	r24, 0x2E	; 46
 3a2:	b9 f4       	brne	.+46     	; 0x3d2 <vfprintf+0xfc>
 3a4:	36 fc       	sbrc	r3, 6
 3a6:	75 c1       	rjmp	.+746    	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 3a8:	23 2d       	mov	r18, r3
 3aa:	20 64       	ori	r18, 0x40	; 64
 3ac:	32 2e       	mov	r3, r18
 3ae:	19 c0       	rjmp	.+50     	; 0x3e2 <vfprintf+0x10c>
 3b0:	36 fe       	sbrs	r3, 6
 3b2:	06 c0       	rjmp	.+12     	; 0x3c0 <vfprintf+0xea>
 3b4:	8a e0       	ldi	r24, 0x0A	; 10
 3b6:	98 9e       	mul	r9, r24
 3b8:	20 0d       	add	r18, r0
 3ba:	11 24       	eor	r1, r1
 3bc:	92 2e       	mov	r9, r18
 3be:	11 c0       	rjmp	.+34     	; 0x3e2 <vfprintf+0x10c>
 3c0:	ea e0       	ldi	r30, 0x0A	; 10
 3c2:	2e 9e       	mul	r2, r30
 3c4:	20 0d       	add	r18, r0
 3c6:	11 24       	eor	r1, r1
 3c8:	22 2e       	mov	r2, r18
 3ca:	f3 2d       	mov	r31, r3
 3cc:	f0 62       	ori	r31, 0x20	; 32
 3ce:	3f 2e       	mov	r3, r31
 3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <vfprintf+0x10c>
 3d2:	8c 36       	cpi	r24, 0x6C	; 108
 3d4:	21 f4       	brne	.+8      	; 0x3de <vfprintf+0x108>
 3d6:	83 2d       	mov	r24, r3
 3d8:	80 68       	ori	r24, 0x80	; 128
 3da:	38 2e       	mov	r3, r24
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <vfprintf+0x10c>
 3de:	88 36       	cpi	r24, 0x68	; 104
 3e0:	41 f4       	brne	.+16     	; 0x3f2 <vfprintf+0x11c>
 3e2:	f7 01       	movw	r30, r14
 3e4:	93 fd       	sbrc	r25, 3
 3e6:	85 91       	lpm	r24, Z+
 3e8:	93 ff       	sbrs	r25, 3
 3ea:	81 91       	ld	r24, Z+
 3ec:	7f 01       	movw	r14, r30
 3ee:	81 11       	cpse	r24, r1
 3f0:	b3 cf       	rjmp	.-154    	; 0x358 <vfprintf+0x82>
 3f2:	98 2f       	mov	r25, r24
 3f4:	9f 7d       	andi	r25, 0xDF	; 223
 3f6:	95 54       	subi	r25, 0x45	; 69
 3f8:	93 30       	cpi	r25, 0x03	; 3
 3fa:	28 f4       	brcc	.+10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fc:	0c 5f       	subi	r16, 0xFC	; 252
 3fe:	1f 4f       	sbci	r17, 0xFF	; 255
 400:	9f e3       	ldi	r25, 0x3F	; 63
 402:	99 83       	std	Y+1, r25	; 0x01
 404:	0d c0       	rjmp	.+26     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 406:	83 36       	cpi	r24, 0x63	; 99
 408:	31 f0       	breq	.+12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40a:	83 37       	cpi	r24, 0x73	; 115
 40c:	71 f0       	breq	.+28     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 40e:	83 35       	cpi	r24, 0x53	; 83
 410:	09 f0       	breq	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 412:	55 c0       	rjmp	.+170    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 414:	20 c0       	rjmp	.+64     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 416:	f8 01       	movw	r30, r16
 418:	80 81       	ld	r24, Z
 41a:	89 83       	std	Y+1, r24	; 0x01
 41c:	0e 5f       	subi	r16, 0xFE	; 254
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	88 24       	eor	r8, r8
 422:	83 94       	inc	r8
 424:	91 2c       	mov	r9, r1
 426:	53 01       	movw	r10, r6
 428:	12 c0       	rjmp	.+36     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 42a:	28 01       	movw	r4, r16
 42c:	f2 e0       	ldi	r31, 0x02	; 2
 42e:	4f 0e       	add	r4, r31
 430:	51 1c       	adc	r5, r1
 432:	f8 01       	movw	r30, r16
 434:	a0 80       	ld	r10, Z
 436:	b1 80       	ldd	r11, Z+1	; 0x01
 438:	36 fe       	sbrs	r3, 6
 43a:	03 c0       	rjmp	.+6      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43c:	69 2d       	mov	r22, r9
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	02 c0       	rjmp	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 442:	6f ef       	ldi	r22, 0xFF	; 255
 444:	7f ef       	ldi	r23, 0xFF	; 255
 446:	c5 01       	movw	r24, r10
 448:	4e d1       	rcall	.+668    	; 0x6e6 <strnlen>
 44a:	4c 01       	movw	r8, r24
 44c:	82 01       	movw	r16, r4
 44e:	f3 2d       	mov	r31, r3
 450:	ff 77       	andi	r31, 0x7F	; 127
 452:	3f 2e       	mov	r3, r31
 454:	15 c0       	rjmp	.+42     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 456:	28 01       	movw	r4, r16
 458:	22 e0       	ldi	r18, 0x02	; 2
 45a:	42 0e       	add	r4, r18
 45c:	51 1c       	adc	r5, r1
 45e:	f8 01       	movw	r30, r16
 460:	a0 80       	ld	r10, Z
 462:	b1 80       	ldd	r11, Z+1	; 0x01
 464:	36 fe       	sbrs	r3, 6
 466:	03 c0       	rjmp	.+6      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 468:	69 2d       	mov	r22, r9
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	6f ef       	ldi	r22, 0xFF	; 255
 470:	7f ef       	ldi	r23, 0xFF	; 255
 472:	c5 01       	movw	r24, r10
 474:	2d d1       	rcall	.+602    	; 0x6d0 <strnlen_P>
 476:	4c 01       	movw	r8, r24
 478:	f3 2d       	mov	r31, r3
 47a:	f0 68       	ori	r31, 0x80	; 128
 47c:	3f 2e       	mov	r3, r31
 47e:	82 01       	movw	r16, r4
 480:	33 fc       	sbrc	r3, 3
 482:	19 c0       	rjmp	.+50     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 484:	82 2d       	mov	r24, r2
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	88 16       	cp	r8, r24
 48a:	99 06       	cpc	r9, r25
 48c:	a0 f4       	brcc	.+40     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 48e:	b6 01       	movw	r22, r12
 490:	80 e2       	ldi	r24, 0x20	; 32
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	33 d1       	rcall	.+614    	; 0x6fc <fputc>
 496:	2a 94       	dec	r2
 498:	f5 cf       	rjmp	.-22     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 49a:	f5 01       	movw	r30, r10
 49c:	37 fc       	sbrc	r3, 7
 49e:	85 91       	lpm	r24, Z+
 4a0:	37 fe       	sbrs	r3, 7
 4a2:	81 91       	ld	r24, Z+
 4a4:	5f 01       	movw	r10, r30
 4a6:	b6 01       	movw	r22, r12
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	28 d1       	rcall	.+592    	; 0x6fc <fputc>
 4ac:	21 10       	cpse	r2, r1
 4ae:	2a 94       	dec	r2
 4b0:	21 e0       	ldi	r18, 0x01	; 1
 4b2:	82 1a       	sub	r8, r18
 4b4:	91 08       	sbc	r9, r1
 4b6:	81 14       	cp	r8, r1
 4b8:	91 04       	cpc	r9, r1
 4ba:	79 f7       	brne	.-34     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 4bc:	e1 c0       	rjmp	.+450    	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 4be:	84 36       	cpi	r24, 0x64	; 100
 4c0:	11 f0       	breq	.+4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c2:	89 36       	cpi	r24, 0x69	; 105
 4c4:	39 f5       	brne	.+78     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 4c6:	f8 01       	movw	r30, r16
 4c8:	37 fe       	sbrs	r3, 7
 4ca:	07 c0       	rjmp	.+14     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4cc:	60 81       	ld	r22, Z
 4ce:	71 81       	ldd	r23, Z+1	; 0x01
 4d0:	82 81       	ldd	r24, Z+2	; 0x02
 4d2:	93 81       	ldd	r25, Z+3	; 0x03
 4d4:	0c 5f       	subi	r16, 0xFC	; 252
 4d6:	1f 4f       	sbci	r17, 0xFF	; 255
 4d8:	08 c0       	rjmp	.+16     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4da:	60 81       	ld	r22, Z
 4dc:	71 81       	ldd	r23, Z+1	; 0x01
 4de:	07 2e       	mov	r0, r23
 4e0:	00 0c       	add	r0, r0
 4e2:	88 0b       	sbc	r24, r24
 4e4:	99 0b       	sbc	r25, r25
 4e6:	0e 5f       	subi	r16, 0xFE	; 254
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	f3 2d       	mov	r31, r3
 4ec:	ff 76       	andi	r31, 0x6F	; 111
 4ee:	3f 2e       	mov	r3, r31
 4f0:	97 ff       	sbrs	r25, 7
 4f2:	09 c0       	rjmp	.+18     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4f4:	90 95       	com	r25
 4f6:	80 95       	com	r24
 4f8:	70 95       	com	r23
 4fa:	61 95       	neg	r22
 4fc:	7f 4f       	sbci	r23, 0xFF	; 255
 4fe:	8f 4f       	sbci	r24, 0xFF	; 255
 500:	9f 4f       	sbci	r25, 0xFF	; 255
 502:	f0 68       	ori	r31, 0x80	; 128
 504:	3f 2e       	mov	r3, r31
 506:	2a e0       	ldi	r18, 0x0A	; 10
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	a3 01       	movw	r20, r6
 50c:	33 d1       	rcall	.+614    	; 0x774 <__ultoa_invert>
 50e:	88 2e       	mov	r8, r24
 510:	86 18       	sub	r8, r6
 512:	44 c0       	rjmp	.+136    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 514:	85 37       	cpi	r24, 0x75	; 117
 516:	31 f4       	brne	.+12     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 518:	23 2d       	mov	r18, r3
 51a:	2f 7e       	andi	r18, 0xEF	; 239
 51c:	b2 2e       	mov	r11, r18
 51e:	2a e0       	ldi	r18, 0x0A	; 10
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	25 c0       	rjmp	.+74     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 524:	93 2d       	mov	r25, r3
 526:	99 7f       	andi	r25, 0xF9	; 249
 528:	b9 2e       	mov	r11, r25
 52a:	8f 36       	cpi	r24, 0x6F	; 111
 52c:	c1 f0       	breq	.+48     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 52e:	18 f4       	brcc	.+6      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 530:	88 35       	cpi	r24, 0x58	; 88
 532:	79 f0       	breq	.+30     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 534:	ae c0       	rjmp	.+348    	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 536:	80 37       	cpi	r24, 0x70	; 112
 538:	19 f0       	breq	.+6      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53a:	88 37       	cpi	r24, 0x78	; 120
 53c:	21 f0       	breq	.+8      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 53e:	a9 c0       	rjmp	.+338    	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 540:	e9 2f       	mov	r30, r25
 542:	e0 61       	ori	r30, 0x10	; 16
 544:	be 2e       	mov	r11, r30
 546:	b4 fe       	sbrs	r11, 4
 548:	0d c0       	rjmp	.+26     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 54a:	fb 2d       	mov	r31, r11
 54c:	f4 60       	ori	r31, 0x04	; 4
 54e:	bf 2e       	mov	r11, r31
 550:	09 c0       	rjmp	.+18     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 552:	34 fe       	sbrs	r3, 4
 554:	0a c0       	rjmp	.+20     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 556:	29 2f       	mov	r18, r25
 558:	26 60       	ori	r18, 0x06	; 6
 55a:	b2 2e       	mov	r11, r18
 55c:	06 c0       	rjmp	.+12     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 55e:	28 e0       	ldi	r18, 0x08	; 8
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	05 c0       	rjmp	.+10     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 564:	20 e1       	ldi	r18, 0x10	; 16
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	20 e1       	ldi	r18, 0x10	; 16
 56c:	32 e0       	ldi	r19, 0x02	; 2
 56e:	f8 01       	movw	r30, r16
 570:	b7 fe       	sbrs	r11, 7
 572:	07 c0       	rjmp	.+14     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 574:	60 81       	ld	r22, Z
 576:	71 81       	ldd	r23, Z+1	; 0x01
 578:	82 81       	ldd	r24, Z+2	; 0x02
 57a:	93 81       	ldd	r25, Z+3	; 0x03
 57c:	0c 5f       	subi	r16, 0xFC	; 252
 57e:	1f 4f       	sbci	r17, 0xFF	; 255
 580:	06 c0       	rjmp	.+12     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 582:	60 81       	ld	r22, Z
 584:	71 81       	ldd	r23, Z+1	; 0x01
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 5f       	subi	r16, 0xFE	; 254
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	a3 01       	movw	r20, r6
 590:	f1 d0       	rcall	.+482    	; 0x774 <__ultoa_invert>
 592:	88 2e       	mov	r8, r24
 594:	86 18       	sub	r8, r6
 596:	fb 2d       	mov	r31, r11
 598:	ff 77       	andi	r31, 0x7F	; 127
 59a:	3f 2e       	mov	r3, r31
 59c:	36 fe       	sbrs	r3, 6
 59e:	0d c0       	rjmp	.+26     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a0:	23 2d       	mov	r18, r3
 5a2:	2e 7f       	andi	r18, 0xFE	; 254
 5a4:	a2 2e       	mov	r10, r18
 5a6:	89 14       	cp	r8, r9
 5a8:	58 f4       	brcc	.+22     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5aa:	34 fe       	sbrs	r3, 4
 5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ae:	32 fc       	sbrc	r3, 2
 5b0:	09 c0       	rjmp	.+18     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b2:	83 2d       	mov	r24, r3
 5b4:	8e 7e       	andi	r24, 0xEE	; 238
 5b6:	a8 2e       	mov	r10, r24
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ba:	b8 2c       	mov	r11, r8
 5bc:	a3 2c       	mov	r10, r3
 5be:	03 c0       	rjmp	.+6      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c0:	b8 2c       	mov	r11, r8
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c4:	b9 2c       	mov	r11, r9
 5c6:	a4 fe       	sbrs	r10, 4
 5c8:	0f c0       	rjmp	.+30     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5ca:	fe 01       	movw	r30, r28
 5cc:	e8 0d       	add	r30, r8
 5ce:	f1 1d       	adc	r31, r1
 5d0:	80 81       	ld	r24, Z
 5d2:	80 33       	cpi	r24, 0x30	; 48
 5d4:	21 f4       	brne	.+8      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d6:	9a 2d       	mov	r25, r10
 5d8:	99 7e       	andi	r25, 0xE9	; 233
 5da:	a9 2e       	mov	r10, r25
 5dc:	09 c0       	rjmp	.+18     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5de:	a2 fe       	sbrs	r10, 2
 5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e2:	b3 94       	inc	r11
 5e4:	b3 94       	inc	r11
 5e6:	04 c0       	rjmp	.+8      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e8:	8a 2d       	mov	r24, r10
 5ea:	86 78       	andi	r24, 0x86	; 134
 5ec:	09 f0       	breq	.+2      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ee:	b3 94       	inc	r11
 5f0:	a3 fc       	sbrc	r10, 3
 5f2:	10 c0       	rjmp	.+32     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5f4:	a0 fe       	sbrs	r10, 0
 5f6:	06 c0       	rjmp	.+12     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f8:	b2 14       	cp	r11, r2
 5fa:	80 f4       	brcc	.+32     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 5fc:	28 0c       	add	r2, r8
 5fe:	92 2c       	mov	r9, r2
 600:	9b 18       	sub	r9, r11
 602:	0d c0       	rjmp	.+26     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 604:	b2 14       	cp	r11, r2
 606:	58 f4       	brcc	.+22     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 608:	b6 01       	movw	r22, r12
 60a:	80 e2       	ldi	r24, 0x20	; 32
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	76 d0       	rcall	.+236    	; 0x6fc <fputc>
 610:	b3 94       	inc	r11
 612:	f8 cf       	rjmp	.-16     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 614:	b2 14       	cp	r11, r2
 616:	18 f4       	brcc	.+6      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 618:	2b 18       	sub	r2, r11
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 61c:	98 2c       	mov	r9, r8
 61e:	21 2c       	mov	r2, r1
 620:	a4 fe       	sbrs	r10, 4
 622:	0f c0       	rjmp	.+30     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 624:	b6 01       	movw	r22, r12
 626:	80 e3       	ldi	r24, 0x30	; 48
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	68 d0       	rcall	.+208    	; 0x6fc <fputc>
 62c:	a2 fe       	sbrs	r10, 2
 62e:	16 c0       	rjmp	.+44     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 630:	a1 fc       	sbrc	r10, 1
 632:	03 c0       	rjmp	.+6      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 634:	88 e7       	ldi	r24, 0x78	; 120
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 63a:	88 e5       	ldi	r24, 0x58	; 88
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	b6 01       	movw	r22, r12
 640:	0c c0       	rjmp	.+24     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 642:	8a 2d       	mov	r24, r10
 644:	86 78       	andi	r24, 0x86	; 134
 646:	51 f0       	breq	.+20     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 648:	a1 fe       	sbrs	r10, 1
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64c:	8b e2       	ldi	r24, 0x2B	; 43
 64e:	01 c0       	rjmp	.+2      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 650:	80 e2       	ldi	r24, 0x20	; 32
 652:	a7 fc       	sbrc	r10, 7
 654:	8d e2       	ldi	r24, 0x2D	; 45
 656:	b6 01       	movw	r22, r12
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	50 d0       	rcall	.+160    	; 0x6fc <fputc>
 65c:	89 14       	cp	r8, r9
 65e:	30 f4       	brcc	.+12     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 660:	b6 01       	movw	r22, r12
 662:	80 e3       	ldi	r24, 0x30	; 48
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	4a d0       	rcall	.+148    	; 0x6fc <fputc>
 668:	9a 94       	dec	r9
 66a:	f8 cf       	rjmp	.-16     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 66c:	8a 94       	dec	r8
 66e:	f3 01       	movw	r30, r6
 670:	e8 0d       	add	r30, r8
 672:	f1 1d       	adc	r31, r1
 674:	80 81       	ld	r24, Z
 676:	b6 01       	movw	r22, r12
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	40 d0       	rcall	.+128    	; 0x6fc <fputc>
 67c:	81 10       	cpse	r8, r1
 67e:	f6 cf       	rjmp	.-20     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 680:	22 20       	and	r2, r2
 682:	09 f4       	brne	.+2      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 684:	4e ce       	rjmp	.-868    	; 0x322 <vfprintf+0x4c>
 686:	b6 01       	movw	r22, r12
 688:	80 e2       	ldi	r24, 0x20	; 32
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	37 d0       	rcall	.+110    	; 0x6fc <fputc>
 68e:	2a 94       	dec	r2
 690:	f7 cf       	rjmp	.-18     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 692:	f6 01       	movw	r30, r12
 694:	86 81       	ldd	r24, Z+6	; 0x06
 696:	97 81       	ldd	r25, Z+7	; 0x07
 698:	02 c0       	rjmp	.+4      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	9f ef       	ldi	r25, 0xFF	; 255
 69e:	2b 96       	adiw	r28, 0x0b	; 11
 6a0:	0f b6       	in	r0, 0x3f	; 63
 6a2:	f8 94       	cli
 6a4:	de bf       	out	0x3e, r29	; 62
 6a6:	0f be       	out	0x3f, r0	; 63
 6a8:	cd bf       	out	0x3d, r28	; 61
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	1f 91       	pop	r17
 6b0:	0f 91       	pop	r16
 6b2:	ff 90       	pop	r15
 6b4:	ef 90       	pop	r14
 6b6:	df 90       	pop	r13
 6b8:	cf 90       	pop	r12
 6ba:	bf 90       	pop	r11
 6bc:	af 90       	pop	r10
 6be:	9f 90       	pop	r9
 6c0:	8f 90       	pop	r8
 6c2:	7f 90       	pop	r7
 6c4:	6f 90       	pop	r6
 6c6:	5f 90       	pop	r5
 6c8:	4f 90       	pop	r4
 6ca:	3f 90       	pop	r3
 6cc:	2f 90       	pop	r2
 6ce:	08 95       	ret

000006d0 <strnlen_P>:
 6d0:	fc 01       	movw	r30, r24
 6d2:	05 90       	lpm	r0, Z+
 6d4:	61 50       	subi	r22, 0x01	; 1
 6d6:	70 40       	sbci	r23, 0x00	; 0
 6d8:	01 10       	cpse	r0, r1
 6da:	d8 f7       	brcc	.-10     	; 0x6d2 <strnlen_P+0x2>
 6dc:	80 95       	com	r24
 6de:	90 95       	com	r25
 6e0:	8e 0f       	add	r24, r30
 6e2:	9f 1f       	adc	r25, r31
 6e4:	08 95       	ret

000006e6 <strnlen>:
 6e6:	fc 01       	movw	r30, r24
 6e8:	61 50       	subi	r22, 0x01	; 1
 6ea:	70 40       	sbci	r23, 0x00	; 0
 6ec:	01 90       	ld	r0, Z+
 6ee:	01 10       	cpse	r0, r1
 6f0:	d8 f7       	brcc	.-10     	; 0x6e8 <strnlen+0x2>
 6f2:	80 95       	com	r24
 6f4:	90 95       	com	r25
 6f6:	8e 0f       	add	r24, r30
 6f8:	9f 1f       	adc	r25, r31
 6fa:	08 95       	ret

000006fc <fputc>:
 6fc:	0f 93       	push	r16
 6fe:	1f 93       	push	r17
 700:	cf 93       	push	r28
 702:	df 93       	push	r29
 704:	fb 01       	movw	r30, r22
 706:	23 81       	ldd	r18, Z+3	; 0x03
 708:	21 fd       	sbrc	r18, 1
 70a:	03 c0       	rjmp	.+6      	; 0x712 <fputc+0x16>
 70c:	8f ef       	ldi	r24, 0xFF	; 255
 70e:	9f ef       	ldi	r25, 0xFF	; 255
 710:	2c c0       	rjmp	.+88     	; 0x76a <fputc+0x6e>
 712:	22 ff       	sbrs	r18, 2
 714:	16 c0       	rjmp	.+44     	; 0x742 <fputc+0x46>
 716:	46 81       	ldd	r20, Z+6	; 0x06
 718:	57 81       	ldd	r21, Z+7	; 0x07
 71a:	24 81       	ldd	r18, Z+4	; 0x04
 71c:	35 81       	ldd	r19, Z+5	; 0x05
 71e:	42 17       	cp	r20, r18
 720:	53 07       	cpc	r21, r19
 722:	44 f4       	brge	.+16     	; 0x734 <fputc+0x38>
 724:	a0 81       	ld	r26, Z
 726:	b1 81       	ldd	r27, Z+1	; 0x01
 728:	9d 01       	movw	r18, r26
 72a:	2f 5f       	subi	r18, 0xFF	; 255
 72c:	3f 4f       	sbci	r19, 0xFF	; 255
 72e:	31 83       	std	Z+1, r19	; 0x01
 730:	20 83       	st	Z, r18
 732:	8c 93       	st	X, r24
 734:	26 81       	ldd	r18, Z+6	; 0x06
 736:	37 81       	ldd	r19, Z+7	; 0x07
 738:	2f 5f       	subi	r18, 0xFF	; 255
 73a:	3f 4f       	sbci	r19, 0xFF	; 255
 73c:	37 83       	std	Z+7, r19	; 0x07
 73e:	26 83       	std	Z+6, r18	; 0x06
 740:	14 c0       	rjmp	.+40     	; 0x76a <fputc+0x6e>
 742:	8b 01       	movw	r16, r22
 744:	ec 01       	movw	r28, r24
 746:	fb 01       	movw	r30, r22
 748:	00 84       	ldd	r0, Z+8	; 0x08
 74a:	f1 85       	ldd	r31, Z+9	; 0x09
 74c:	e0 2d       	mov	r30, r0
 74e:	09 95       	icall
 750:	89 2b       	or	r24, r25
 752:	e1 f6       	brne	.-72     	; 0x70c <fputc+0x10>
 754:	d8 01       	movw	r26, r16
 756:	16 96       	adiw	r26, 0x06	; 6
 758:	8d 91       	ld	r24, X+
 75a:	9c 91       	ld	r25, X
 75c:	17 97       	sbiw	r26, 0x07	; 7
 75e:	01 96       	adiw	r24, 0x01	; 1
 760:	17 96       	adiw	r26, 0x07	; 7
 762:	9c 93       	st	X, r25
 764:	8e 93       	st	-X, r24
 766:	16 97       	sbiw	r26, 0x06	; 6
 768:	ce 01       	movw	r24, r28
 76a:	df 91       	pop	r29
 76c:	cf 91       	pop	r28
 76e:	1f 91       	pop	r17
 770:	0f 91       	pop	r16
 772:	08 95       	ret

00000774 <__ultoa_invert>:
 774:	fa 01       	movw	r30, r20
 776:	aa 27       	eor	r26, r26
 778:	28 30       	cpi	r18, 0x08	; 8
 77a:	51 f1       	breq	.+84     	; 0x7d0 <__ultoa_invert+0x5c>
 77c:	20 31       	cpi	r18, 0x10	; 16
 77e:	81 f1       	breq	.+96     	; 0x7e0 <__ultoa_invert+0x6c>
 780:	e8 94       	clt
 782:	6f 93       	push	r22
 784:	6e 7f       	andi	r22, 0xFE	; 254
 786:	6e 5f       	subi	r22, 0xFE	; 254
 788:	7f 4f       	sbci	r23, 0xFF	; 255
 78a:	8f 4f       	sbci	r24, 0xFF	; 255
 78c:	9f 4f       	sbci	r25, 0xFF	; 255
 78e:	af 4f       	sbci	r26, 0xFF	; 255
 790:	b1 e0       	ldi	r27, 0x01	; 1
 792:	3e d0       	rcall	.+124    	; 0x810 <__ultoa_invert+0x9c>
 794:	b4 e0       	ldi	r27, 0x04	; 4
 796:	3c d0       	rcall	.+120    	; 0x810 <__ultoa_invert+0x9c>
 798:	67 0f       	add	r22, r23
 79a:	78 1f       	adc	r23, r24
 79c:	89 1f       	adc	r24, r25
 79e:	9a 1f       	adc	r25, r26
 7a0:	a1 1d       	adc	r26, r1
 7a2:	68 0f       	add	r22, r24
 7a4:	79 1f       	adc	r23, r25
 7a6:	8a 1f       	adc	r24, r26
 7a8:	91 1d       	adc	r25, r1
 7aa:	a1 1d       	adc	r26, r1
 7ac:	6a 0f       	add	r22, r26
 7ae:	71 1d       	adc	r23, r1
 7b0:	81 1d       	adc	r24, r1
 7b2:	91 1d       	adc	r25, r1
 7b4:	a1 1d       	adc	r26, r1
 7b6:	20 d0       	rcall	.+64     	; 0x7f8 <__ultoa_invert+0x84>
 7b8:	09 f4       	brne	.+2      	; 0x7bc <__ultoa_invert+0x48>
 7ba:	68 94       	set
 7bc:	3f 91       	pop	r19
 7be:	2a e0       	ldi	r18, 0x0A	; 10
 7c0:	26 9f       	mul	r18, r22
 7c2:	11 24       	eor	r1, r1
 7c4:	30 19       	sub	r19, r0
 7c6:	30 5d       	subi	r19, 0xD0	; 208
 7c8:	31 93       	st	Z+, r19
 7ca:	de f6       	brtc	.-74     	; 0x782 <__ultoa_invert+0xe>
 7cc:	cf 01       	movw	r24, r30
 7ce:	08 95       	ret
 7d0:	46 2f       	mov	r20, r22
 7d2:	47 70       	andi	r20, 0x07	; 7
 7d4:	40 5d       	subi	r20, 0xD0	; 208
 7d6:	41 93       	st	Z+, r20
 7d8:	b3 e0       	ldi	r27, 0x03	; 3
 7da:	0f d0       	rcall	.+30     	; 0x7fa <__ultoa_invert+0x86>
 7dc:	c9 f7       	brne	.-14     	; 0x7d0 <__ultoa_invert+0x5c>
 7de:	f6 cf       	rjmp	.-20     	; 0x7cc <__ultoa_invert+0x58>
 7e0:	46 2f       	mov	r20, r22
 7e2:	4f 70       	andi	r20, 0x0F	; 15
 7e4:	40 5d       	subi	r20, 0xD0	; 208
 7e6:	4a 33       	cpi	r20, 0x3A	; 58
 7e8:	18 f0       	brcs	.+6      	; 0x7f0 <__ultoa_invert+0x7c>
 7ea:	49 5d       	subi	r20, 0xD9	; 217
 7ec:	31 fd       	sbrc	r19, 1
 7ee:	40 52       	subi	r20, 0x20	; 32
 7f0:	41 93       	st	Z+, r20
 7f2:	02 d0       	rcall	.+4      	; 0x7f8 <__ultoa_invert+0x84>
 7f4:	a9 f7       	brne	.-22     	; 0x7e0 <__ultoa_invert+0x6c>
 7f6:	ea cf       	rjmp	.-44     	; 0x7cc <__ultoa_invert+0x58>
 7f8:	b4 e0       	ldi	r27, 0x04	; 4
 7fa:	a6 95       	lsr	r26
 7fc:	97 95       	ror	r25
 7fe:	87 95       	ror	r24
 800:	77 95       	ror	r23
 802:	67 95       	ror	r22
 804:	ba 95       	dec	r27
 806:	c9 f7       	brne	.-14     	; 0x7fa <__ultoa_invert+0x86>
 808:	00 97       	sbiw	r24, 0x00	; 0
 80a:	61 05       	cpc	r22, r1
 80c:	71 05       	cpc	r23, r1
 80e:	08 95       	ret
 810:	9b 01       	movw	r18, r22
 812:	ac 01       	movw	r20, r24
 814:	0a 2e       	mov	r0, r26
 816:	06 94       	lsr	r0
 818:	57 95       	ror	r21
 81a:	47 95       	ror	r20
 81c:	37 95       	ror	r19
 81e:	27 95       	ror	r18
 820:	ba 95       	dec	r27
 822:	c9 f7       	brne	.-14     	; 0x816 <__ultoa_invert+0xa2>
 824:	62 0f       	add	r22, r18
 826:	73 1f       	adc	r23, r19
 828:	84 1f       	adc	r24, r20
 82a:	95 1f       	adc	r25, r21
 82c:	a0 1d       	adc	r26, r0
 82e:	08 95       	ret

00000830 <_exit>:
 830:	f8 94       	cli

00000832 <__stop_program>:
 832:	ff cf       	rjmp	.-2      	; 0x832 <__stop_program>
